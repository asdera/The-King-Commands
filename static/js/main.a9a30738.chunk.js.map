{"version":3,"sources":["components/board.js","App.js","serviceWorker.js","index.js"],"names":["Board","this","props","stage","hello","src","size","fen","alt","React","Component","MicCheck","MicWorks","annyang","require","urlParams","URLSearchParams","window","location","search","hasToken","has","authToken","get","App","state","needsToken","turn","white","board","gameId","gameState","commands","console","log","setState","uci","fetch","method","headers","uci2","moveCommand","addCommands","addCallback","process","start","userSaid","commandText","phrases","occurences","forEach","p","i","j","length","toLowerCase","includes","symbol","maximum","Math","max","apply","map","x","filter","floor","random","slice","toUpperCase","square","split","id","fenBoard","row","abs","indexOf","replace","piece","where","callback","then","response","json","data","nowPlaying","isMyTurn","color","FENBoard","lastMove","setTimeout","bind","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a9a30738.chunk.js","sourcesContent":["import React from 'react';\r\nimport './board.css';\r\n\r\nexport default class Board extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>{this.props.stage}</h1>\r\n                \r\n                {this.props.hello ? <MicWorks /> : <MicCheck />}\r\n\r\n                <img src={\"http://www.fen-to-image.com/image/\"+this.props.size+\"/\"+this.props.fen} alt=\"Chess Board\" />\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\nclass MicCheck extends React.Component {    \r\n    render() {\r\n        return <p>Welcome, say \"hello\" to test your mic!</p>;\r\n    }\r\n}\r\n\r\nclass MicWorks extends React.Component {\r\n    render() {\r\n        return <p>Hey there, your mic works! Good luck on your game!</p>;\r\n    }\r\n}","import React from 'react';\nimport Board from './components/board'\nimport FENBoard from \"fen-chess-board\";\nimport './App.css';\n\nconst annyang = require('annyang');\nvar urlParams = new URLSearchParams(window.location.search);\n\nconst hasToken = urlParams.has('token');\n\nvar authToken = urlParams.get('token');\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = { \n      needsToken: 2,\n      turn: false,\n      white: true,\n      hello: false, \n      board: false,\n      gameId: \"\",\n      fen: \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR\",\n      size: 512\n    };\n  }\n  componentDidMount() {\n\n    if (annyang) {\n      this.gameState(function () {\n        // console.log(this.state)\n        annyang.state = this.state;\n      });\n\n      var commands = {\n        'hello': () => { \n          console.log(\"hi\")\n          this.setState({ hello: true })\n        },\n        'gary': () => { \n          console.log(\"goose\")\n          this.setState({ hello: true })\n        },\n\n        'castle': () => {\n          const uci = this.state.white ? \"e1g1\" : \"e8g8\";\n          fetch('https://lichess.org/api/bot/game/'+this.state.gameId+'/move/'+uci, {\n            method: 'POST',\n            headers: {\n              'Accept': 'application',\n              'Authorization': 'Bearer ' + authToken,\n              'Content-Type': 'application/json',\n            },\n          })\n\n          const uci2 = this.state.white ? \"e1c1\" : \"e8c8\";\n          fetch('https://lichess.org/api/bot/game/'+this.state.gameId+'/move/'+uci2, {\n            method: 'POST',\n            headers: {\n              'Accept': 'application',\n              'Authorization': 'Bearer ' + authToken,\n              'Content-Type': 'application/json',\n            },\n          })\n        },\n\n        'castle short': () => { \n          const uci = this.state.white ? \"e1g1\" : \"e8g8\";\n          fetch('https://lichess.org/api/bot/game/'+this.state.gameId+'/move/'+uci, {\n            method: 'POST',\n            headers: {\n              'Accept': 'application',\n              'Authorization': 'Bearer ' + authToken,\n              'Content-Type': 'application/json',\n            },\n          })\n        },\n\n        'castle long': () => { \n          const uci = this.state.white ? \"e1c1\" : \"e8c8\";\n          fetch('https://lichess.org/api/bot/game/'+this.state.gameId+'/move/'+uci, {\n            method: 'POST',\n            headers: {\n              'Accept': 'application',\n              'Authorization': 'Bearer ' + authToken,\n              'Content-Type': 'application/json',\n            },\n          })\n        },\n\n        'resign game': () => { \n          fetch('https://lichess.org/api/bot/game/'+this.state.gameId+'/resign/', {\n            method: 'POST',\n            headers: {\n              'Accept': 'application',\n              'Authorization': 'Bearer ' + authToken,\n              'Content-Type': 'application/json',\n            },\n          })\n        },\n\n        'abort game': () => { \n          fetch('https://lichess.org/api/bot/game/'+this.state.gameId+'/abort/', {\n            method: 'POST',\n            headers: {\n              'Accept': 'application',\n              'Authorization': 'Bearer ' + authToken,\n              'Content-Type': 'application/json',\n            },\n          })\n        },\n\n        '*uci': {'regexp': /^[a-h][1-8] [a-h][1-8]$/, 'callback': this.moveCommand},\n\n        'piece *move': {'regexp': /[a-h][1-8]$/, 'callback': this.moveCommand},\n\n        'pawn *move': {'regexp': /[a-h][1-8]$/, 'callback': this.moveCommand},\n        'pain *move': {'regexp': /[a-h][1-8]$/, 'callback': this.moveCommand},\n        'pond *move': {'regexp': /[a-h][1-8]$/, 'callback': this.moveCommand},\n        'on *move': {'regexp': /[a-h][1-8]$/, 'callback': this.moveCommand},\n        'pause *move': {'regexp': /[a-h][1-8]$/, 'callback': this.moveCommand},\n        'minion *move': {'regexp': /[a-h][1-8]$/, 'callback': this.moveCommand},\n\n        'knight *move': {'regexp': /[a-h][1-8]$/, 'callback': this.moveCommand},\n        'night *move': {'regexp': /[a-h][1-8]$/, 'callback': this.moveCommand},\n        'knights *move': {'regexp': /[a-h][1-8]$/, 'callback': this.moveCommand},\n        'horse *move': {'regexp': /[a-h][1-8]$/, 'callback': this.moveCommand},\n        'cavalary *move': {'regexp': /[a-h][1-8]$/, 'callback': this.moveCommand},\n        'cowboy *move': {'regexp': /[a-h][1-8]$/, 'callback': this.moveCommand},\n\n        'bishop *move': {'regexp': /[a-h][1-8]$/, 'callback': this.moveCommand},\n        'wizard *move': {'regexp': /[a-h][1-8]$/, 'callback': this.moveCommand},\n        'mage *move': {'regexp': /[a-h][1-8]$/, 'callback': this.moveCommand},\n        'shazam *move': {'regexp': /[a-h][1-8]$/, 'callback': this.moveCommand},\n        'cleric *move': {'regexp': /[a-h][1-8]$/, 'callback': this.moveCommand},\n        'sorcerer *move': {'regexp': /[a-h][1-8]$/, 'callback': this.moveCommand},\n\n        'rook *move': {'regexp': /[a-h][1-8]$/, 'callback': this.moveCommand},\n        'brooke *move': {'regexp': /[a-h][1-8]$/, 'callback': this.moveCommand},\n        'rock *move': {'regexp': /[a-h][1-8]$/, 'callback': this.moveCommand},\n        'castlehead *move': {'regexp': /[a-h][1-8]$/, 'callback': this.moveCommand},\n        'ruck *move': {'regexp': /[a-h][1-8]$/, 'callback': this.moveCommand},\n        'tower *move': {'regexp': /[a-h][1-8]$/, 'callback': this.moveCommand},\n\n        'queen *move': {'regexp': /[a-h][1-8]$/, 'callback': this.moveCommand},\n        'dragon *move': {'regexp': /[a-h][1-8]$/, 'callback': this.moveCommand},\n        'princess *move': {'regexp': /[a-h][1-8]$/, 'callback': this.moveCommand},\n        'chancellor *move': {'regexp': /[a-h][1-8]$/, 'callback': this.moveCommand},\n        'lady *move': {'regexp': /[a-h][1-8]$/, 'callback': this.moveCommand},\n        'amazon *move': {'regexp': /[a-h][1-8]$/, 'callback': this.moveCommand},\n\n        'king *move': {'regexp': /[a-h][1-8]$/, 'callback': this.moveCommand},\n        'royal *move': {'regexp': /[a-h][1-8]$/, 'callback': this.moveCommand},\n        'president *move': {'regexp': /[a-h][1-8]$/, 'callback': this.moveCommand},\n        'crown *move': {'regexp': /[a-h][1-8]$/, 'callback': this.moveCommand},\n        'prince *move': {'regexp': /[a-h][1-8]$/, 'callback': this.moveCommand},\n        'pope *move': {'regexp': /[a-h][1-8]$/, 'callback': this.moveCommand},\n\n        // '*square': {'regexp': /^[a-h][1-8]$/, 'callback': this.moveCommand},\n      };\n\n      // Add our commands to annyang\n      annyang.addCommands(commands);\n      annyang.addCallback('soundstart', function() {\n        console.log('listening...');\n      });\n\n      annyang.addCallback('resultMatch', this.process);\n      \n      annyang.addCallback('result', function() {\n        console.log('stopped listening');\n      });\n\n      // Start listening.\n      if (this.state.needsToken === 2) {\n        annyang.start();\n      }\n    }\n  }\n\n  process (userSaid, commandText, phrases) {\n    console.log(userSaid); // sample output: 'hello'\n    console.log(commandText); // sample output: 'hello (there)'\n    console.log(phrases); // sample output: ['hello', 'halo', 'yellow', 'polo', 'hello kitty']\n\n    if (commandText === \"*uci\") {\n      console.log(\"uci\", this);\n      const uci = userSaid.replace(/\\s/g, '').toLowerCase();\n      fetch('https://lichess.org/api/bot/game/'+this.state.gameId+'/move/'+uci, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application',\n          'Authorization': 'Bearer ' + authToken,\n          'Content-Type': 'application/json',\n        },\n      })\n      return;\n    } else if (commandText === \"piece *move\" && this.state.turn) {\n      var occurences = [\n        [\"pawn\", \"pain\", \"pond\", \"on\", \"pause\", \"minion\", 0],\n        [\"night\", \"knight\", \"warrior\", \"horse\", \"cavalary\", \"cowboy\", 0],\n        [\"bishop\", \"wizard\", \"mage\", \"shazam\", \"cleric\", \"sorcerer\", 0],\n        [\"rook\", \"brooke\", \"rock\", \"castlehead\", \"ruck\", \"tower\", \"roxy\", \"rough\", \"rex\", \"rick\", \"wreck\", \"rug\", 0],\n        [\"queen\", \"dragon\", \"princess\", \"chancellor\", \"lady\", \"amazon\", 0],\n        [\"king\", \"royal\", \"president\", \"crown\", \"prince\", \"pope\", 0]\n      ];\n\n      phrases.forEach(function(p) {\n        for (var i = 0; i < 6; i++) {\n          for (var j = 0; j < occurences[i].length-1; j++) {\n            if (p.toLowerCase().includes(occurences[i][j])) {\n              occurences[i][occurences[i].length-1]++;\n            }\n          }\n        }\n      });\n\n      const maximum = Math.max.apply(Math, occurences.map(x => x[x.length-1]));\n\n      occurences = occurences.filter(x => x[x.length-1] === maximum);\n\n      var symbol;\n\n      if (occurences.length === 6) {\n        symbol = \"p\";\n      } else {\n        symbol = occurences[Math.floor(Math.random()*occurences.length)][0].slice(0, 1);\n      }\n\n      if (this.state.white) {\n        symbol = symbol.toUpperCase();\n      }\n\n      var square = userSaid.split(\" \");\n      square = square[square.length - 1];\n\n      console.log(maximum, symbol, occurences, square);\n\n      const id = this.state.gameId;\n\n      this.state.fenBoard.forEach(function(row, i) {\n        row.forEach(function(p, j) {\n          const uci = (\"abcdefgh\".slice(j, j+1) + (8-i) + square).toLowerCase();\n          if (p === symbol && !(symbol.toLowerCase() === \"p\" && Math.abs(\"abcdefgh\".indexOf(uci[0]) - \"abcdefgh\".indexOf(uci[2])) > 1)) {\n            console.log(uci);\n            fetch('https://lichess.org/api/bot/game/'+id+'/move/'+uci, {\n              method: 'POST',\n              headers: {\n                'Accept': 'application',\n                'Authorization': 'Bearer ' + authToken,\n                'Content-Type': 'application/json',\n              },\n            })\n          }\n        });\n      });\n    }\n  }\n\n  moveCommand (piece, where) {\n\n  }\n\n  gameState (callback) {\n    fetch('https://lichess.org/api/account/playing', {\n      method: 'GET',\n      headers: {\n        'Accept': 'application',\n        'Authorization': 'Bearer ' + authToken,\n        'Content-Type': 'application/json',\n      },\n    }).then(response => response.json())\n    .then(data => {\n      // console.log(data)\n      if (hasToken && data.nowPlaying) {\n        if (data.nowPlaying.length) {\n          this.setState({\n            board: true,\n            turn: data.nowPlaying[0].isMyTurn,\n            white: data.nowPlaying[0].color === \"white\",\n            fen: data.nowPlaying[0].fen,\n            fenBoard: new FENBoard(data.nowPlaying[0].fen).board,\n            gameId: data.nowPlaying[0].gameId,\n            lastMove: data.nowPlaying[0].lastMove,\n            needsToken: 2,\n          }, callback)\n        } else {\n          this.setState({\n            needsToken: 1,\n          })\n        }\n        \n        setTimeout(function() {\n          this.gameState(function () {\n            // console.log(this.state)\n            annyang.state = this.state;\n          });\n        }.bind(this), 1000);\n      } else {\n        this.setState({\n          needsToken: 0,\n        })\n      }\n    })\n  }\n  \n  render() {\n    return (\n      <Board \n        hello={this.state.hello} \n        fen={this.state.fen} \n        size={this.state.size} \n        white={this.state.white} \n        stage={[\"Please add your lichess.org personal access token to the current url - ?token=YOUR_API_TOKEN\", \"Join a game on lichess.org to begin!\", \"Speech Recognition Chess\"][this.state.needsToken]}\n      />\n    );\n  }\n\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}